// e2e/products.test.ts
import { test, expect } from '@playwright/test';

// Define a constant for our test prefix to stay consistent
const TEST_PREFIX = 'PLAYWRIGHT_TEST_';

test.describe('Products Page', () => {
  // Add setup to handle image issues
  test.beforeEach(async ({ page }) => {
    // Mock image responses to prevent errors
    await page.route('**/*.jpg', route => {
      return route.fulfill({
        status: 200,
        contentType: 'image/jpeg',
        body: Buffer.from([
          0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 
          0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43, 
          0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
          0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x0B, 0x08, 0x00, 0x01, 0x00, 
          0x01, 0x01, 0x01, 0x11, 0x00, 0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01, 0x00, 
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
          0x00, 0x00, 0x00, 0xFF, 0xDA, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00, 0x3F, 
          0x00, 0xFF, 0xD9
        ])
      });
    });
    
    await page.route('**/*.webp', route => {
      return route.fulfill({
        status: 200,
        contentType: 'image/webp',
        body: Buffer.from([
          0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 
          0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xD9
        ])
      });
    });
  });

  test('should load products page', async ({ page }) => {
    // Navigate to products page
    await page.goto('/products');
    
    // Basic test - just verify page loads without error
    await expect(page.locator('body')).not.toBeEmpty({ timeout: 10000 });
    console.log('Products page loaded successfully');
  });
});