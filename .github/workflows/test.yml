name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      DATABASE_URL: mongodb://localhost:27017/test_db
      REDIS_URL: redis://localhost:6379
      NEXT_PUBLIC_API_BASE_URL: http://localhost:3000/api
      JWT_SECRET: test_jwt_secret
      NEXTAUTH_SECRET: test_nextauth_secret
      NEXTAUTH_URL: http://localhost:3000

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Initialize MongoDB Replica Set
        run: |
          mongosh --eval 'rs.initiate({_id: "rs0", members: [{_id: 0, host: "localhost:27017"}]})'
          sleep 10  # Give some time for the replica set to initialize

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Push Prisma schema to test database
        run: npx prisma db push --skip-generate

      - name: Seed test database
        run: NODE_ENV=test npx prisma db seed

      - name: Run linter
        run: npm run lint

      - name: Run unit & integration tests
        run: npm run test:ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          DEBUG: pw:api

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            playwright-report/